[tool.poetry]
authors = ["Mamadou S Diallo <msdiallo@samplics.org>"]
description = "Select, weight and analyze complex sample data"
license = "MIT"
name = "samplics"
version = "0.4.21"

readme = "README.md"

documentation = "https://samplics-org.github.io/samplics/"
homepage = "https://samplics-org.github.io/samplics//"
repository = "https://github.com/survey-methods/samplics"

keywords = ["sampling", "sample", "weighting", "estimation", "survey"]

classifiers = [
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Development Status :: 4 - Beta",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering",
]

packages = [
  {include = "samplics", from = "src"},
]

[tool.poetry.dependencies]
python = ">=3.10"
# attrs = "^23.1.0"
numpy = ">=2.0"
pandas = ">=2.1"
matplotlib = ">=3.4" 
polars = {extras = ["pyarrow"], version = "^0.20.31"}
statsmodels = ">=0.13" 

[tool.poetry.group.dev.dependencies]
black = "^24.3"
# certifi = "^2023.7.22"
codecov = ">=2.1"
mypy = ">=1.8"
pytest = ">=7.4"
pytest-cov = ">=4.1"
ruff = ">=0.1.9"
jupyterlab = "^4.2.1"

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
# line-length = 99
# target-version = ["py310", "py311"]

# [tool.isort]
# atomic = true
# filter_files = true
# force_single_line = false
# include_trailing_comma = true
# known_first_party = "samplics"
# known_pandas = ["pandas", "numpy", "scipy", "statsmodels"]
# line_length = 99
# lines_after_imports = 2
# lines_between_types = 1
# multi_line_output = 3
# profile = "black"
# sections = ["FUTURE", "STDLIB", "THIRDPARTY", "PANDAS", "FIRSTPARTY", "LOCALFOLDER"]
# src_paths = ["src", "tests"]
# use_parentheses = true

[tool.pytest.ini_options]
addopts = "--ignore=tests/apis --ignore=tests/sae --ignore=tests/types"
# testpaths = ["tests"]


[tool.ruff]
src = ["src", "tests"]
# extend-exclude = ["tests"]

# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["D", "E", "F", "W", "I001"]
ignore = ["D", "E501"] # for development we can ignore the docs

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Same as Black.
line-length = 99

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12.
target-version =  "py312"

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.ruff.isort]
known-first-party = ["samplics"]
known-third-party = ["matplotlib", "numpy",  "pandas", "polars", "pydantic", "scipy", "statsmodels"]
lines-after-imports = 2
lines-between-types = 1


[tool.mypy]
ignore_missing_imports = true
follow_imports = "silent"
strict_optional = true
allow_redefinition = true
show_error_context = false
show_column_numbers = true
# Ensure full coverage
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
# Restrict dynamic typing
disallow_any_generics = false
warn_no_return = true
warn_return_any = true
no_implicit_optional = true
# Know what you are doing
warn_unreachable = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
exclude = [".venv",  "tests"]

[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=1.0.0"]
